apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kiali
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "kiali.name" . }}
    chart: {{ template "kiali.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: kiali
  template:
    metadata:
      name: kiali
      labels:
        app: kiali
        chart: {{ template "kiali.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      serviceAccountName: kiali-service-account
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        name: kiali
        command:
        - "/opt/kiali/kiali"
        - "-config"
        - "/kiali-configuration/config.yaml"
        - "-v"
        - "4"
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AUTH_STRATEGY
          value: {{ .Values.dashboard.authStrategy }}
        - name: SERVER_CREDENTIALS_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dashboard.secretName }}
              key: username
              optional: true
        - name: SERVER_CREDENTIALS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dashboard.secretName }}
              key: passphrase
              optional: true
        - name: PROMETHEUS_SERVICE_URL
          value: {{ .Values.prometheusAddr }}
{{- if .Values.contextPath }}
        - name: SERVER_WEB_ROOT
          value: {{ .Values.contextPath }}
{{- end }}
        volumeMounts:
        - name: kiali-configuration
          mountPath: "/kiali-configuration"
        resources:
{{- if .Values.resources }}
{{ toYaml .Values.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
      - name: kiali-proxy
        image: {{ .Values.image.proxy.repository }}:{{ .Values.image.proxy.tag }}
        args:
        - nginx
        - -g
        - daemon off;
        - -c
        - /nginx/nginx.conf
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /nginx/
          name: kiali-nginx
        {{- if and .Values.resources .Values.resources.proxy }}
        resources:
{{ toYaml .Values.resources.proxy | indent 10 }}
        {{- end }}
      volumes:
      - name: kiali-configuration
        configMap:
          name: kiali
      - name: kiali-nginx
        configMap:
          name: kiali-nginx
          items:
          - key: nginx.conf
            mode: 438
            path: nginx.conf
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
